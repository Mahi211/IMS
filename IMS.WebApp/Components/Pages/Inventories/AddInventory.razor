@page "/addinventory"
@inject IAddInventoryUseCase AddInventoryUseCase
@inject NavigationManager navigation
<h3>AddInventory</h3>
<br/>
<EditForm Model="inventory" FormName="formInventory" OnValidSubmit="Save">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText
            id="name"
            @bind-Value="inventory.InventoryName"
            class="form-control">
        </InputText>
        <ValidationMessage For="() => inventory.InventoryName"/>

    </div> 
    
    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber
            id="quantity"
            @bind-Value="inventory.Quantity"
            class="form-control">
        </InputNumber>
        <ValidationMessage For="() => inventory.Quantity" />
    </div>
    
    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber
            id="price"
            @bind-Value="inventory.Price"
            class="form-control">
        </InputNumber>
        <ValidationMessage For="() => inventory.Price" />
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Save</button>
    &nbsp;
    <a href="/inventories" class="btn btn-primary">Cancel</a>
</EditForm>



@code {
    [SupplyParameterFromForm]
    private Inventory inventory { get; set; } = new();
    private async Task Save()
    {
        await AddInventoryUseCase.ExecuteAsync(inventory);
        navigation.NavigateTo("/inventories");
    }
}
